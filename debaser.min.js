/*! angular-debaser - v0.1.0 - 2014-06-17
* https://github.com/decipherinc/angular-debaser
* Copyright (c) 2014 Decipher, Inc.; Licensed MIT */

!function(a,b){"use strict";var c,d=b.injector,e=b.isArray,f=b.extend;c=function(c,g,h){var i,j,k,l;if(!c)throw new Error("debase requires a module name parameter");if(!g||e(g)&&!g.length)throw new Error("debase requires one or more target components");b.isString(g)&&(g=[g]),h=h||{},l=function(a,l,m,n,o){var p=m.getAdapter(h.adapter||n.adapter),q=m.contains;o=b.isObject(o)?o.Stub:o,j=b.isDefined(h.autoStub)?h.autoStub:n.autoStub,k=f({},n.stubs,h.stubs),i=f({},n.ignores,m.makeSet(h.ignores||[])),b.module(c)._invokeQueue.forEach(function(b){var c,f=(b[1],b[2]),h=f[0];q(g,h)&&(c=e(f[1])?f[1].slice(0,-1):d().annotate(f[1]),c.forEach(function(b){var c;j&&!k[b]&&(k[b]=new o({$name:b,$type:"function"})),c=o.findStub(b,{stubs:k,adapter:p,ignores:i}),c&&c.provide(a)}))})},l.$inject=["$provide","$injector","decipher.debaser.utils","decipher.debaser.options","decipher.debaser.stubProvider"],a.beforeEach(function(){b.mock.module(c,l)})},c.options=function(a){var c=b.injector(["decipher.debaser"]).get("decipher.debaser.options");b.extend(c,a)},c.stub=function(a,c,d){var e,f=function(a){return function(){return a}},g=function(g,h,i,j){var k,l,m=h.STUB_TYPES;if(j=b.isObject(j)?j.Stub:j,!a)throw new Error("Parameter required");if(b.isString(a)){if(a=a.toLowerCase(),!i.contains(m,a))throw new Error('Unknown stub type "'+a+'".  Valid types are: '+m.join(", ")+". To use a custom value, do not use this function.");k=i.getAdapter(d.adapter||g.adapter),l=k[a](c),e=new j({$type:a,$proxy:l},d),b.isObject(l)||b.isArray(l)?b.forEach(e.$proxy,function(a){b.isFunction(a)&&(a.base=f(e))}):b.isFunction(l)&&(l.base=f(e))}else e=new j(b.extend({},a,{$proxy:a}),d)};return d=d||{},g.$inject=["decipher.debaser.options","decipher.debaser.constants","decipher.debaser.utils","decipher.debaser.stubProvider","$injector"],b.injector(["decipher.debaser",g]),e},a.debase=c}(window,window.angular),function(a){"use strict";var b=["function","object","array","regexp","date"],c=["factory","service","provider"];a.module("decipher.debaser",["ngMock"]).constant("decipher.debaser.constants",{STUB_TYPES:b,COMPONENTS:c}).constant("decipher.debaser.options",{adapter:"decipher.debaser.adapters.sinon",ignores:{},stubs:{},autoStub:!1,autoScope:!0})}(window.angular,window.beforeEach,window.sinon),function(a,b,c){"use strict";b.module("decipher.debaser").provider("decipher.debaser.adapters.sinon",function(){var d,e=function(){var e,f=arguments;return e=1===arguments.length&&b.isObject(arguments[0])?c.stub(b.copy(arguments[0])):1===arguments.length&&b.isFunction(arguments[0])?c.spy(arguments[0]):c.stub.apply(null,[b.copy(arguments[0])].concat(Array.prototype.slice.apply(arguments,[1]))),a.beforeEach(function(a){return function(){for(var g=d||c.sandbox.create("decipher.debaser.adapters.sinon"),h=f.length;h--&&h>0;)b.isFunction(f[h].restore)&&f[h].restore();try{e=g.stub.apply(g,f)}catch(i){e=g.spy.apply(g,f)}c.extend(e,a)}}(e)),e},f=function(a){return function(){var b,c,d=function(){};return d.prototype=a.prototype,b=new d,c=a.apply(b,arguments),Object(c)===c?c:b}},g=function(){return a.beforeEach(function(){d=c.sandbox.create("decipher.debaser.adapters.sinon")}),a.afterEach(function(){d&&d.restore()}),{object:function(a){return a?e(a):{}},"function":function(){return e.apply(null,arguments)},array:function(a){return a?a.map(function(c,d){return b.isFunction(c)?e.apply(null,[a,d]):c}):[]},regexp:function(){var a=f(RegExp)(arguments);return e(null,a),a},date:function(){var a=f(Date)(arguments);return e(null,a),a}}};return g.$get=this.$get=function(){throw new Error("not implemented")},b.extend(this,{sinonAdapter:g}),this.adapter=function(){return g()},g})}(window,window.angular,window.sinon),function(a){"use strict";a.module("decipher.debaser").provider("decipher.debaser.stub",["decipher.debaser.constants",function(b){var c=function(b,c){a.extend(this,b),this.$opts=c||{}};return c.prototype.$debased=!0,c.prototype.getStub=function(){return this.$proxy},c.prototype.provide=function(b){var c,d,e=this.$proxy,f=this.$opts.inject||[];a.isFunction(e)&&f.length?(e.$inject=e.$inject||f,e.$get=e.$get||a.noop,this.$opts.provider?(d=["$injector",function(a){return function(){return a.invoke(e)}}],c="provider"):(d=["$injector",function(a){return function(){return a.invoke(e)}}],c="factory")):(d=e,c=this.$opts.provider?"constant":"value"),b[c](this.$name,d)},c.findStub=function d(e,f){var g,h,i,j,k=function(a){if(h[a])return new c({$type:a,$name:e,$proxy:h[j]()});throw new Error('Unknown stub type "'+a+'".  Valid types are: '+b.STUB_TYPES.join(", "))};if(f=f||{},g=f.stubs,h=f.adapter,i=f.ignores||[],!e)throw new Error("name is required");if(!Object.keys(g).length)throw new Error("define stubs!");if(!h)throw new Error("where the hell is the adapter?");return a.isDefined(d.cache[e])?d.cache[e]:i[e]?d.cache[e]=null:(j=g[e],j?(a.isString(j)?j=k(j.toLowerCase()):j.$debased===!0?(j.$type&&(j.$proxy=j.$proxy||h[j.$type]()),j.$name=j.$name||e):j=a.isFunction(j)&&j.name&&h[j.name.toLowerCase()]?k(j.name.toLowerCase()):new c({$name:e,$proxy:j}),d.cache[e]=j):void 0)},c.findStub.cache={},c.$get=this.$get=function(){throw new Error("not implemented")},a.extend(this,{Stub:c}),c}])}(window.angular),function(a){"use strict";var b,c,d;b=function(a,b){return a.indexOf(b)>-1},c=function(b){var c={};return b.forEach(function(b){a.isString(b)&&(c[b]=!0)}),c},d=function e(b){var c,d=function(b){c=a.isObject(b)?b.adapter():b()};if(d.$inject=[b+"Provider"],e.cache[b])return e.cache[b];if(!a.isString(b))return e.cache[b]=b;try{return a.injector(["decipher.debaser",d]),e.cache[b]=c}catch(f){throw window.console.error(f.message),window.console.error(f.stack),window.console.error(f),new Error('debaser: unknown adapter "'+b+'"')}},d.cache={},a.module("decipher.debaser").constant("decipher.debaser.utils",{getAdapter:d,makeSet:c,contains:b})}(window.angular),function(a){"use strict";a.module("decipher.debaser").config(["$injector","decipher.debaser.options","$provide",function(b,c,d){c.autoScope&&d.decorator("$controller",function(a,b){var c=b.get("$rootScope");return function(b,d){var e;return d=d||{},d.$scope=d.$scope||c.$new(),e=a(b,d),e.scope=function(){return d.$scope},e}}),d.decorator("decipher.debaser.stub",function(b){return a.isObject(b)?b.Stub:b}),d.decorator("decipher.debaser.adapters.sinon",function(b){return a.isObject(b)?b.sinonAdapter:b})}])}(window.angular),function(a,b){"use strict";b(a.mock.module("decipher.debaser"))}(window.angular,window.beforeEach);
//# sourceMappingURL=debaser.min.js.map